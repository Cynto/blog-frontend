import type { NextPage } from 'next';
import Router, { useRouter } from 'next/router';
import { useState, useRef, useEffect } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../../styles/CreatePost.module.scss';
import { Editor } from '@tinymce/tinymce-react';
import Header from '../../components/Header';
import useUserObject from '../../hooks/useUserObject';
import useDidMountEffect from '../../hooks/useDidMountEffect';

const Create: NextPage = () => {
  const [invalid, setInvalid] = useState(false);
  const [content, setContent] = useState('');
  const [count, setCount] = useState(0);

  const userHookObject = useUserObject();
  const { userObj } = userHookObject;

  const editorRef = useRef(null);
  const firstUpdate = useRef(true);

  const router = useRouter();

  const handleSubmit = async (data: any) => {
    const title = data.title;
    const image = data.image || '';
    const tags = data.tags;
    console.log(tags.value.split(', '));

    console.log(title.value, image.value, content);
    console.log(content);

    const response = await fetch('http://localhost:4000/posts', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${localStorage.getItem('token')}`,
      },
      body: JSON.stringify({
        title: title.value,
        image: image.value,
        content,
        tags: tags.value.split(', '),
      }),
    });
    const json = await response.json();

    if (json.post) {
      router.push('/posts');
    } else {
      setInvalid(true);
    }
  };

  useEffect(() => {
    if (userObj === null) {
      router.push('/');
    }
  }, [userObj]);

  return (
    <>
      <Head>
        <title>Create Post</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header userObj={userObj} />

      <main className={styles.main}>
        <Image
          src="https://uca3892d2045b4c59e30bd55644f.previews.dropboxusercontent.com/p/thumb/ABg1y-xI-rzHbzdxzL7TRG1Jf3XL0ECJksyCslu9EuR39ZYwiw8jBH38aUI-4dzMpVTmd1y5VYblL1GgBp_0GXk9QuQ2hEgqjHLbaS4XR8ZPQXeqnAGrf0utFAy9Zq0pdXWrhVAjuRpcs8jBTttcYbqK6rL_eVB1k9gNebJy9aItuLyNLbFQSi2RDkoO2WFuOJiVfXYgAR-WykYLagV0cRVYxDnKTxNBTRDqa7bx3lU79AOqPn3SQkQP65vm8GHNBmSevNGRGmMNXejsmf_EHQF8nqXiJ9k5XV3Z8jtwYyspdWULvU1wIR7Day9gRD8tCVgVw8LoB8JirQHOmbpGpu2JbLK_Em2wRRRox5mm3BCutLYzmeZ_uQ-RsqTJHmhgJ-JegOtgeX-WuRLZWdRS5H1qDY8F2T3KGIWsGxOn4e2dOA/p.jpeg"
          layout="fill"
          objectFit="cover"
          alt="background"
        />
        <form
          className={styles.form}
          onSubmit={(e) => {
            e.preventDefault();
            handleSubmit(e.target);
          }}
          method="POST"
        >
          <h1>Create Blog Post</h1>
          <label htmlFor="title" className={styles.label}>
            Title <span className={styles.required}>*</span>
            <input type="title" id="title" className={styles.input} required />
          </label>
          <label htmlFor="image" className={styles.label}>
            Image URL (Optional)
            <input type="text" id="image" className={styles.input} />
          </label>
          <label htmlFor="content" className={styles.label}>
            Content <span className={styles.required}>*</span>
            <Editor
              id="editor"
              textareaName="content"
              apiKey="43kem55nzyn2unpp405bl6tbi63lr06vcg3u0169qhwe0xpr"
              onInit={(evt, editor: any) => (editorRef.current = editor)}
              init={{
                height: 500,
                menubar: false,
              }}
              onEditorChange={(content, editor) => {
                setContent(content);
              }}
            />
          </label>
          <label htmlFor="tags" className={styles.label}>
            Tags (Seperate tags with comma and a space)
            <input type="text" id="tags" className={styles.input} />
          </label>
          {invalid && <p className="error">â€¢ Invalid title, content or tags</p>}

          <button type="submit">Post</button>
        </form>
      </main>
    </>
  );
};

export default Create;
